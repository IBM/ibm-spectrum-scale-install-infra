---
- name: Set basedomain and rootdomain
  set_fact:
    basedomain: "{{ BASE_DN.split('.')[0] }}"
    rootdomain: "{{ BASE_DN.split('.')[1] }}"

- name: Install required software
  apt:
    name:
      - gnutls-bin
      - ssl-cert
      - nfs-common
    update_cache: yes
  register: install_software

- name: Log software installation
  lineinfile:
    path: "{{ logfile }}"
    line: "Installed pre-required software"
  when: install_software.changed

- name: Install OpenLDAP
  debconf:
    name: slapd
    question: "slapd/root_password"
    value: "{{ LDAP_ADMIN_PASSWORD }}"
    vtype: "password"
  notify:
    - Reconfigure slapd

- name: Reconfigure slapd for OpenLDAP
  command: dpkg-reconfigure slapd
  args:
    warn: false

- name: Configure LDAP base and URI
  lineinfile:
    path: /etc/ldap/ldap.conf
    line: "{{ item }}"
  loop:
    - "BASE   dc={{ basedomain }},dc={{ rootdomain }}"
    - "URI    ldap://localhost"

- name: Restart OpenLDAP service
  service:
    name: slapd
    state: restarted

- name: Generate CA private key
  command: "certtool --generate-privkey --sec-param High --outfile /etc/ssl/private/ldap_cakey.pem"
  creates: /etc/ssl/private/ldap_cakey.pem

- name: Create CA template
  copy:
    dest: /etc/ssl/ca.info
    content: |
      cn = {{ LDAP_GROUP }}
      ca
      cert_signing_key
      expiration_days = 3650

- name: Generate self-signed CA certificate
  command: >
    certtool --generate-self-signed
    --load-privkey /etc/ssl/private/ldap_cakey.pem
    --template /etc/ssl/ca.info
    --outfile /usr/local/share/ca-certificates/ldap_cacert.pem
  creates: /usr/local/share/ca-certificates/ldap_cacert.pem

- name: Update CA certificates
  command: update-ca-certificates

- name: Copy CA certificate
  copy:
    src: /usr/local/share/ca-certificates/ldap_cacert.pem
    dest: /etc/ssl/certs/

- name: Generate LDAP server private key
  command: "certtool --generate-privkey --sec-param High --outfile /etc/ssl/private/ldapserver_slapd_key.pem"
  creates: /etc/ssl/private/ldapserver_slapd_key.pem

- name: Create LDAP server template
  copy:
    dest: /etc/ssl/ldapserver.info
    content: |
      organization = {{ LDAP_GROUP }}
      cn = localhost
      tls_www_server
      encryption_key
      signing_key
      expiration_days = 3650

- name: Generate LDAP server certificate signed by CA
  command: >
    certtool --generate-certificate
    --load-privkey /etc/ssl/private/ldapserver_slapd_key.pem
    --load-ca-certificate /etc/ssl/certs/ldap_cacert.pem
    --load-ca-privkey /etc/ssl/private/ldap_cakey.pem
    --template /etc/ssl/ldapserver.info
    --outfile /etc/ssl/certs/ldapserver_slapd_cert.pem

- name: Set permissions for LDAP server private key
  file:
    path: /etc/ssl/private/ldapserver_slapd_key.pem
    owner: root
    group: openldap
    mode: '0640'

- name: Add openldap to ssl-cert group
  user:
    name: openldap
    groups: ssl-cert
    append: yes

- name: Apply TLS configuration to OpenLDAP
  copy:
    dest: /etc/ssl/certinfo.ldif
    content: |
      dn: cn=config
      add: olcTLSCACertificateFile
      olcTLSCACertificateFile: /etc/ssl/certs/ldap_cacert.pem
      -
      add: olcTLSCertificateFile
      olcTLSCertificateFile: /etc/ssl/certs/ldapserver_slapd_cert.pem
      -
      add: olcTLSCertificateKeyFile
      olcTLSCertificateKeyFile: /etc/ssl/private/ldapserver_slapd_key.pem

- name: Apply LDAP TLS configuration
  command: ldapmodify -Y EXTERNAL -H ldapi:/// -f /etc/ssl/certinfo.ldif

- name: Enable LDAPS in slapd config
  lineinfile:
    path: /etc/default/slapd
    regexp: '^SLAPD_SERVICES="ldap:/// ldapi:///"'
    line: 'SLAPD_SERVICES="ldap:/// ldapi:/// ldaps:///"'

- name: Configure TLS for LDAP client
  lineinfile:
    path: /etc/ldap/ldap.conf
    line: "{{ item }}"
  loop:
    - "TLS_CACERT /etc/ssl/certs/ldap_cacert.pem"
    - "TLS_REQCERT allow"

- name: Restart slapd service
  service:
    name: slapd
    state: restarted

- name: Configure SSH settings
  lineinfile:
    path: /root/.ssh/authorized_keys
    regexp: '^.*$'
    line: 'no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \\"{{ LDAP_USER }}\\" rather than the user \\"root\\".'; echo; sleep 10; exit 142"'

- name: Update SSH config for MaxSessions and MaxStartups
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^#MaxSessions', line: 'MaxSessions 32' }
    - { regexp: '^#MaxStartups', line: 'MaxStartups 30:30:100' }

- name: Restart SSH service
  service:
    name: sshd
    state: restarted

# Creating LDAP directory to store the LDIF files.

- name: LDAP | LDAP Directory | Creation 
  file:
    path: "{{ LDAP_DIR }}"
    state: directory
  register: create_dir_output
  run_once: true

