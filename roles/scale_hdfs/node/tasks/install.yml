---
# Install or update RPMs
# Ensure that installation method was chosen during previous role
- name: global_var | Initialize
  set_fact:
   scale_hdfs_nodes_list: []
   scale_hdfs_namenodes_list: []
   scale_hdfs_datanodes_list: []
   scale_hdfs_cluster: []
   scale_install_all_packages: []

- name: global_var | initializing scale_hdfs_cluster
  set_fact:
    scale_hdfs_cluster: "{{ item }}"
  delegate_to: localhost
  run_once: true

- name: global_var | Collect all HDFS NameNodes
  set_fact:
   scale_hdfs_namenodes_list: "{{ scale_hdfs_cluster.namenodes | unique }}"
  delegate_to: localhost
  run_once: true

- name: global_var | Collect all HDFS DataNodes
  set_fact:
   scale_hdfs_datanodes_list: "{{ scale_hdfs_cluster.datanodes | unique }}"
  delegate_to: localhost
  run_once: true

- name: global_var | Get HDFS nodes
  set_fact:
    scale_hdfs_nodes_list: "{{ scale_hdfs_namenodes_list + scale_hdfs_datanodes_list }}"

- name: global_var | make unique HDFS nodes
  set_fact:
    scale_hdfs_nodes_list: "{{ scale_hdfs_nodes_list | unique }}"

- block:
  - name: install | Check for repository installation method
    set_fact:
     scale_installmethod: repository
    when:
    - scale_install_repository_url is defined

  - name: install | Check for localpkg installation method
    set_fact:
     scale_installmethod: local_pkg
    when:
    - scale_install_repository_url is undefined
    - scale_install_remotepkg_path is undefined
    - scale_install_localpkg_path is defined

  - name: install | Check for remotepkg installation method
    set_fact:
     scale_installmethod: remote_pkg
    when:
    - scale_install_repository_url is undefined
    - scale_install_remotepkg_path is defined

  - name: install | Check for directory package installation method
    set_fact:
      scale_installmethod: dir_pkg
    when:
      - scale_install_repository_url is undefined
      - scale_install_remotepkg_path is undefined
      - scale_install_localpkg_path is undefined
      - scale_install_directory_pkg_path is defined

  - name: install | Check installation method
    assert:
     that: scale_installmethod is defined
     msg: >-
          Please set the appropriate variable 'scale_install_*' for your desired
          installation method!
  run_once: true
  delegate_to: localhost

# Run chosen installation method to get list of RPMs   

- name: install | Set the extracted package directory path
  set_fact:
    hdfs_extracted_path: "{{ scale_extracted_path }}"
    hdfs_version_path_selection_rhel: "{{ hdfs_rhel_version_path }}"

- name: install | Stat extracted packages directory
  stat:
    path: "{{ hdfs_extracted_path }}"
  register: scale_extracted_gpfs_dir

- include_tasks: prepare_env.yml

- block:
  - name:
    set_fact:
       hdfs_version_path_selection_rhel: "{{ hdfs_rhel_version_path_33 }}"
    when: transparency_33_enabled|bool

  - name: install | Fetch hdfs rpm dir path for rhel
    set_fact:
        hdfs_rpm_path_rhel: "{{ hdfs_version_path_selection_rhel }}" 
 
  - name: install | Fetch hdfs rpm dir path for sles
    set_fact:
        hdfs_rpm_path_sles: "{{ hdfs_sles_version_path }}" 
  
  - name: install | Fetch hdfs rpm dir path for ubuntu
    set_fact:
        hdfs_rpm_path_ubuntu: "{{ hdfs_ubuntu_version_path }}" 

  
  run_once: true
  delegate_to: localhost

- debug:
    var: hdfs_rpm_path_rhel

- include_tasks: install_{{ scale_installmethod }}.yml

- import_tasks: apt/install.yml
  when: ansible_distribution in scale_ubuntu_distribution

- import_tasks: yum/install.yml
  when: ansible_distribution in scale_rhel_distribution

- import_tasks: zypper/install.yml
  when: ansible_distribution in scale_sles_distribution

