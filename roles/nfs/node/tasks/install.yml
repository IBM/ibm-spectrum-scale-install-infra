---

# Install or update RPMs
# Ensure that installation method was chosen during previous role
- block:
  - name: install | Check for repository installation method
    set_fact:
     scale_installmethod: repository
    when:
    - scale_install_nfs_repository_url is defined

  - name: install | Check for localpkg installation method
    set_fact:
     scale_installmethod: local_pkg
    when:
    - scale_install_repository_url is undefined
    - scale_install_remotepkg_path is undefined
    - scale_install_localpkg_path is defined

  - name: install | Check for remotepkg installation method
    set_fact:
     scale_installmethod: remote_pkg
    when:
    - scale_install_repository_url is undefined
    - scale_install_remotepkg_path is defined

  - name: install | Check installation method
    assert:
     that: scale_installmethod is defined
     msg: >-
          Please set the appropriate variable 'scale_install_*' for your desired
          installation method!
  run_once: true
  delegate_to: localhost

# Run chosen installation method to get list of RPMs

- name: install | Initialize list of RPMs
  set_fact:
   scale_install_all_rpms: []

- name: install | Set the extracted package directory path
  set_fact:
    nfs_extracted_path: "{{ gpfs_extracted_path }}"

- name: install | Stat extracted packages directory
  stat:
    path: "{{ nfs_extracted_path }}"
  register: scale_extracted_gpfs_dir

- include_tasks: install_{{ scale_installmethod }}.yml

- meta: flush_handlers

# Install or update RPMs
- name: Install GPFS nfs RPMs
  package:
   name: "{{ scale_install_all_rpms }}"
   state: present
  when: (ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf') and ansible_fqdn in nfs_nodes_list

- name: Install rpcbind
  package: name=rpcbind state=present
  when: ansible_fqdn in nfs_nodes_list
