---
- name: delete | check compute node
  add_host:
    name: "{{ hostvars[item]['ansible_fqdn'] }}"
    groups: scale_compute_nodes
  when:
     - hostvars[item].state is defined and hostvars[item].state == 'absent'
     - (hostvars[item].is_nsd_server is defined and hostvars[item].is_nsd_server | bool == false)
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

- name: delete | check server node
  add_host:
    name: "{{ hostvars[item]['ansible_fqdn'] }}"
    groups: scale_server_nodes
  when:
     - hostvars[item].state is defined and hostvars[item].state == 'absent'
     - (hostvars[item].is_nsd_server is defined and hostvars[item].is_nsd_server | bool)
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

- name: cluster | Find existing cluster
  shell: /usr/lpp/mmfs/bin/mmlscluster -Y | grep -v HEADER | grep clusterSummary | cut -d ':' -f 8
  register: scale_cluster_clusterId
  changed_when: false
  failed_when: false

- name: cluster | Find existing cluster members
  add_host:
    name: "{{ item }}"
    groups: scale_cluster_members
  when:
    - hostvars[item].state is defined and hostvars[item].state == 'present'
    - hostvars[item].scale_cluster_clusterId.stdout
  with_items: "{{ ansible_play_hosts }}"
  changed_when: false

- block:
    - name: delete | Shutdown Spectrum Scale compute nodes
      vars:
        delete_nodes: "{{ groups['scale_compute_nodes'] | list }}"
      command: /usr/lpp/mmfs/bin/mmshutdown -N {{ delete_nodes | join(',') }}
      register: scale_shutdown_node
      delegate_to: "{{ groups['scale_cluster_members'].0 }}"

    - debug:
         msg: "{{ scale_shutdown_node.cmd }}"

    - name: delete | Remove Spectrum Scale compute nodes
      vars:
        delete_nodes: "{{ groups['scale_compute_nodes'] | list }}"
      command: /usr/lpp/mmfs/bin/mmdelnode -N {{ delete_nodes | join(',') }}
      register: scale_delete_node
      delegate_to: "{{ groups['scale_cluster_members'].0 }}"

    - debug:
         msg: "{{ scale_delete_node.cmd }}"

  when: groups['scale_compute_nodes'] is defined and groups['scale_compute_nodes'] | length > 0
  run_once: true
