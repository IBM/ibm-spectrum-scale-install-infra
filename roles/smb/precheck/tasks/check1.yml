---
- name: Initialize
  set_fact:
   smb_nodes_list: []

- name: Collect all smb nodes
  set_fact:
   smb_nodes_list: "{{ smb_nodes_list + [hostvars[item]['ansible_fqdn']] }}"
  when: hostvars[item]['is_protocol_node'] is defined and hostvars[item]['is_protocol_node']|bool
  with_items:
   - "{{ ansible_play_hosts }}"
  delegate_to: localhost
  run_once: true

- name: Check if atleast one smb node is configured
  assert:
   that:
   - smb_nodes_list|length > 0
   fail_msg: "No smb nodes configured"

- name: Check if smb is enabled
  assert:
   that:
   - protocols.smb|bool
   fail_msg: "SMB is not enabled"
  run_once: true

- name: Check if service smb is running
  assert:
   that:
   - ansible_facts.services["smb"].state != "running"
   fail_msg: "Service smb found running on {{ ansible_hostname }}. Which conflicts with the installation of SMB.SUGGESTTED ACTION- Run commands to stop (systemctl stop smb) and disable (systemctl disable smb) this service on node {{ ansible_hostname }}"
  when: ansible_fqdn in smb_nodes_list and ansible_facts.services["smb"].state is defined
  any_errors_fatal: true

- name: Check if service smbd is running
  assert:
   that:
   - ansible_facts.services["smbd"].state != "running"
   fail_msg: "Service smbd found running on {{ ansible_hostname }}. Which conflicts with the installation of SMB.SUGGESTTED ACTION- Run commands to stop (systemctl stop smbd) and disable (systemctl disable smbd) this service on node {{ ansible_hostname }}"
  when: ansible_fqdn in smb_nodes_list and ansible_facts.services["smbd"].state is defined
  any_errors_fatal: true

- name: Check if service winbind is running
  assert:
   that:
   - ansible_facts.services["winbind"].state != "running"
   fail_msg: "Service smb found running on {{ ansible_hostname }}. Which conflicts with the installation of SMB.SUGGESTTED ACTION- Run commands to stop (systemctl stop winbind) and disable (systemctl disable winbind) this service on node {{ ansible_hostname }}"
  when: ansible_fqdn in smb_nodes_list and ansible_facts.services["winbind"].state is defined
  any_errors_fatal: true

- name: Check if service winbindd is running
  assert:
   that:
   - ansible_facts.services["winbindd"].state != "running"
   fail_msg: "Service winbindd found running on {{ ansible_hostname }}. Which conflicts with the installation of SMB.SUGGESTTED ACTION- Run commands to stop (systemctl stop winbindd) and disable (systemctl disable winbindd) this service on node {{ ansible_hostname }}"
  when: ansible_fqdn in smb_nodes_list and ansible_facts.services["winbindd"].state is defined
  any_errors_fatal: true

- name: Check if service ctdb is running
  assert:
   that:
   - ansible_facts.services["ctdb"].state != "running"
   fail_msg: "Service ctdb found running on {{ ansible_hostname }}. Which conflicts with the installation of SMB.SUGGESTTED ACTION- Run commands to stop (systemctl stop ctdb) and disable (systemctl disable ctdb) this service on node {{ ansible_hostname }}"
  when: ansible_fqdn in smb_nodes_list and ansible_facts.services["ctdb"].state is defined
  any_errors_fatal: true

- name: Check if service ctdbd is running
  assert:
   that:
   - ansible_facts.services["ctdbd"].state != "running"
   fail_msg: "Service ctdbd found running on {{ ansible_hostname }}. Which conflicts with the installation of SMB.SUGGESTTED ACTION- Run commands to stop (systemctl stop ctdbd) and disable (systemctl disable ctdbd) this service on node {{ ansible_hostname }}"
  when: ansible_fqdn in smb_nodes_list and ansible_facts.services["ctdbd"].state is defined
  any_errors_fatal: true

- debug:
   msg: "SMB precheck ok"

