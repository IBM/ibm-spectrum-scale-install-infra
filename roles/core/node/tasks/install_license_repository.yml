---
# YUM repository installation method

#
# Configure license package installation repository
#
- name: install | Get license package
  yum:
    list: gpfs.license.*
  register: package_name_version
  when:
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'

- name: install | Get license package
  apt:
    list: gpfs.license.*
  register: package_name_version
  when:
    - ansible_pkg_mgr == 'apt'

- name: install | Get license package
  zypper:
    list: gpfs.license.*
  register: package_name_version
  when:
    - ansible_pkg_mgr == 'zypper'

- debug:
    msg: "{{ package_name_version.results }}"

- name: install | Check valid only one GPFS License (gpfs.license) RPM
  assert:
    that: package_name_version.results | selectattr("yumstate", "match", "available") | list | length == 1
    msg: >-
      More than one GPFS License (gpfs.license) RPM found:
      "{{ gpfs_path_url }}/gpfs.license*{{ scale_architecture }}*"
  when:
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'

- name: install | Find GPFS License package
  vars:
    gpfs_license_package: "{{ package_name_version.results|selectattr('yumstate','equalto','available')|map(attribute='name')|list }}"
  set_fact:
    scale_gpfs_license_package: "{{ gpfs_license_package }}"

- name: install | Add GPFS license packages to list
  set_fact:
    scale_install_license_packages: "{{ scale_install_license_packages + [ item ] }}"
  with_items:
    - "{{ scale_gpfs_license_package }}"
    - gpfs.adv
    - gpfs.crypto
  when: '"gpfs.license.std" not in scale_gpfs_license_package'

- name: install | Add GPFS license packages to list
  set_fact:
    scale_install_license_packages: "{{ scale_gpfs_license_package }}"
  when: '"gpfs.license.std" in scale_gpfs_license_package'
