---
- name: Cleanup | Client Cluster (access) | Check if the remotefilesystem is already defined
  uri:
    validate_certs: no
    force_basic_auth: yes
    url: https://{{ client_cluster_gui_hostname }}:{{ client_cluster_gui_port }}/{{ remote_mount_endpoint }}/remotefilesystems/{{ client_cluster_filesystem_name }}
    method: GET
    user: "{{ client_cluster_gui_username }}"
    password: "{{ client_cluster_gui_password }}"
    body_format: json
    status_code:
      - 200
  register: remote_filesystem_results
  ignore_errors: true

- name: Cleanup | Client Cluster (access) | Remove defined filesystem
  block:
    - name: "Client Cluster (access) | Unmount the filesystem | PUT {{ scalemgmt_endpoint }}/filesystems/{{ client_cluster_filesystem_name }}/unmount"
      uri:
        validate_certs: no
        force_basic_auth: true
        url: https://{{ client_cluster_gui_hostname }}:{{ client_cluster_gui_port }}/{{ scalemgmt_endpoint }}/filesystems/{{ client_cluster_filesystem_name }}/unmount
        method: PUT
        user: "{{ client_cluster_gui_username }}"
        password: "{{ client_cluster_gui_password }}"
        body_format: json
        body: |
          {
            "force": "true"
          }
        status_code:
          - 202
      register: umount_call

    - name: "Checking results from the job: {{ umount_call.json.jobs[0].jobId }}"
      uri:
        validate_certs: no
        force_basic_auth: true
        url: https://{{ client_cluster_gui_hostname }}:{{ client_cluster_gui_port }}/{{ scalemgmt_endpoint }}/jobs/{{ umount_call.json.jobs[0].jobId }}
        method: GET
        user: "{{ client_cluster_gui_username }}"
        password: "{{ client_cluster_gui_password }}"
      register: completed_check
      until: completed_check.json.jobs[0].status == "COMPLETED"
      retries: "{{ restapi_retries_count }}"
      delay: "{{ restapi_retries_delay }}"

    - name: "Client Cluster (access) | Delete the filesystem | DELETE: {{ remote_mount_endpoint }}/remotefilesystems/{{ client_cluster_filesystem_name }}?force=yes"
      uri:
        validate_certs: no
        force_basic_auth: true
        url: https://{{ client_cluster_gui_hostname }}:{{ client_cluster_gui_port }}/{{ remote_mount_endpoint }}/remotefilesystems/{{ client_cluster_filesystem_name }}?force=yes
        method: DELETE
        user: "{{ client_cluster_gui_username }}"
        password: "{{ client_cluster_gui_password }}"
        status_code:
          - 202
      register: delete_call

    - name: "Checking results from the job: {{ delete_call.json.jobs[0].jobId }}"
      uri:
        validate_certs: no
        force_basic_auth: true
        url: https://{{ client_cluster_gui_hostname }}:{{ client_cluster_gui_port }}/{{ scalemgmt_endpoint }}/jobs/{{ delete_call.json.jobs[0].jobId }}
        method: GET
        user: "{{ client_cluster_gui_username }}"
        password: "{{ client_cluster_gui_password }}"
      register: completed_check
      until: completed_check.json.jobs[0].status == "COMPLETED"
      retries: "{{ restapi_retries_count }}"
      delay: "{{ restapi_retries_delay }}"
  when: not remote_filesystem_results.failed
