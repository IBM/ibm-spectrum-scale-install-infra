---
# Dir package installation method

- block:  ## run_once: true
    - name: upgrade | Stat directory installation package
      stat:
        path: "{{ scale_install_directory_pkg_path }}"
      register: scale_install_dirpkg

    - name: upgrade | Check directory installation package
      assert:
        that: scale_install_dirpkg.stat.exists
        msg: >-
          Please set the variable 'scale_install_directory_pkg_path' to point to the
          local installation package (accessible on Ansible control machine)!
  run_once: true
  delegate_to: localhost

- name: upgrade | Creates default directory
  file:
    path: "{{ scale_extracted_path }}"
    state: directory
    mode: a+x
    recurse: yes

- name: upgrade | Stat extracted packages
  stat:
    path: "{{ scale_extracted_path + '/' + scale_install_directory_pkg_path | basename }}"
  register: scale_install_gpfs_packagedir

#
# Copy installation directory package to default
#
- block:
    - name: upgrade | Copy installation package to node
      copy:
        src: "{{ scale_install_directory_pkg_path }}"
        dest: "{{ scale_extracted_path }}"
        mode: a+x

- name: upgrade | Set installation package path
  set_fact:
    dir_path: "{{ scale_extracted_path + '/' + scale_install_directory_pkg_path | basename }}"

- name: upgrade | gpfs base path
  set_fact:
    scale_gpfs_path_url: "{{ dir_path }}"
  when: scale_install_directory_pkg_path is defined

#
# Find object rpms
#
- block:  ## when: host is defined as a protocol node

    - name: upgrade | obj path
      set_fact:
        scale_obj_url: 'object_rpms/rhel8'
      when: ansible_distribution in scale_rhel_distribution and ansible_distribution_major_version == '8'

    - name: upgrade | Find all packages
      find:
        paths:  "{{ obj_extracted_path }}/{{ scale_obj_url }}"
        patterns: "*.rpm"
      register: object_package

    - set_fact:
        scale_install_all_packages: "{{ object_package.files | map(attribute='path') | list}}"

    - name: upgrade | Check valid scale (openstack-swift) packages
      assert:
        that: scale_install_all_packages | select('match', '.*openstack-swift.*') | list
        msg: "No Scale object (openstack-swift) package found {{ obj_extracted_path }}/{{ scale_obj_url }}/openstack-swift*"
      run_once: true

    - name: upgrade | Check valid python3-swift package
      assert:
        that: scale_install_all_packages | select('match', '.*python3-swift.*') | list
        msg: "No python3-swift package found {{ obj_extracted_path }}/{{ scale_obj_url }}/python3-swift*"
      run_once: true

    - name: upgrade | Check valid scale (spectrum-scale-object) package
      assert:
        that: scale_install_all_packages | select('match', '.*spectrum-scale-object.*') | list
        msg: "No Scale object (spectrum-scale-object) package found {{ obj_extracted_path }}/{{ scale_obj_url }}/spectrum-scale-object*"
      run_once: true
