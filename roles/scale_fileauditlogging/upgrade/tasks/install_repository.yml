---
# YUM repository installation method

#
# Configure YUM repository
#
- name: upgrade | Initialize
  set_fact:
   scale_fal_url: ""
   package_installed: false

- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_rpms/rhel/'
  when: ansible_distribution in scale_rhel_distribution

- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_debs/ubuntu/'
  when: ansible_distribution in scale_ubuntu_distribution

- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_rpms/rhel/'
  when: ansible_distribution in scale_sles_distribution

- name: upgrade | Initialize
  set_fact:
   gpgcheck: "yes"

- name: upgrade | Disable gpg check
  set_fact:
   gpgcheck: "no"
  when: scale_version < '5.0.5.0'

- name: upgrade | Check if gpfs kafka installed
  shell: rpm -q gpfs.kafka
  register: gpfskafka_installed
  when: ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
  ignore_errors: true
  failed_when: false
  args:
    warn: false

- name: upgrade | Configure GPFS Java YUM repository
  yum_repository:
    name: spectrum-scale-gpfs-java
    description: IBM Spectrum Scale (GPFS Java)
    baseurl: "{{ scale_install_repository_url }}gpfs_rpms/"
    gpgcheck: "{{ gpgcheck }}"
    repo_gpgcheck: no
    sslverify: no
    state: present
  notify: yum-clean-metadata
  when:
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
    - scale_install_repository_url != 'existing'
#
# Configure apt repository
#
- name: upgrade | Configure GPFS Java APT repository
  apt_repository:
    filename: spectrum-scale-gpfs-java-debs
    repo: "deb [trusted=yes] {{ scale_install_repository_url }}gpfs_debs/ ./"
    validate_certs: no
    state: present
    update_cache: yes
    codename: IBM Spectrum Scale (gpfs java debs)
    mode: 0777
  when:
    - ansible_pkg_mgr == 'apt'
    - scale_install_repository_url != 'existing'
#
# Configure zypper repository
#
- name: upgrade | Configure GPFS Java repository
  zypper_repository:
    name: spectrum-scale-gpfs-java
    description: IBM Spectrum Scale (GPFS java)
    repo: "{{ scale_install_repository_url }}gpfs_rpms/"
    disable_gpg_check: yes
    state: present
    overwrite_multiple: yes
  when:
    - ansible_pkg_mgr == 'zypper'
    - scale_install_repository_url != 'existing'
 
- name: upgrade | Configure fal YUM repository
  yum_repository:
    name: spectrum-scale-fal
    description: IBM Spectrum Scale (FAL)
    baseurl: "{{ scale_install_repository_url }}{{ scale_fal_url }}"
    gpgcheck: "{{ gpgcheck }}"
    repo_gpgcheck: no
    sslverify: no
    state: present
  notify: yum-clean-metadata
  when:
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
    - scale_install_repository_url != 'existing'

- name: upgrade | Configure fal APT repository
  apt_repository:
    filename: spectrum-scale-fal-debs
    repo: "deb [trusted=yes] {{ scale_install_repository_url }}{{ scale_fal_url }} ./"
    validate_certs: no
    state: present
    update_cache: yes
    codename: IBM Spectrum Scale (FAL debs)
    mode: 0777
  when:
    - ansible_pkg_mgr == 'apt'
    - scale_install_repository_url != 'existing'

- name: upgrade | Configure fal repository
  zypper_repository:
    name: spectrum-scale-fal-sles
    description: IBM Spectrum Scale (FAL)
    repo: "{{ scale_install_repository_url }}{{ scale_fal_url }}"
    disable_gpg_check: no
    state: present
  when:
    - ansible_pkg_mgr == 'zypper'

- name: upgrade | Set if gpfs kafka installed
  set_fact:
    package_installed: true
  when:
     - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
     - gpfskafka_installed.rc == 0
     

- name: upgrade | Check if gpfs kafka installed
  shell: dpkg -l | grep gpfs.kafka | awk "{print $1}" |  grep ii
  register: scale_kafka_status
  failed_when: no
  changed_when: no
  args:
    warn: false
  when:
    - ansible_pkg_mgr == 'apt'

- name: upgrade | Set if gpfs kafka installed
  set_fact:
    package_installed: true
  when:
     - ansible_pkg_mgr == 'apt'
     - scale_kafka_status.rc == 0

- name: upgrade | Add GPFS file audit logging packages to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  with_items:
    - gpfs.kafka*
  when: (package_installed | bool)

#
# Add FAL packages
#
- name: upgrade | Add GPFS file audit logging packages to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  with_items:
    - "{{ scale_auditlogging_packages }}"
  when: (scale_fileauditlogging_enable | bool)
