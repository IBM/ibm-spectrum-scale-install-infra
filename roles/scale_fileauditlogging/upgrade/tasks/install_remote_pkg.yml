
---

# Remote package installation method

- name: upgrade | Stat remote installation package
  stat:
    path: "{{ scale_install_remotepkg_path }}"
    checksum_algorithm: md5
  register: scale_install_remotepkg


- name: upgrade | Check remote installation package
  assert:
    that: scale_install_remotepkg.stat.exists
    msg: >-
      Please set the variable 'scale_install_remotepkg_path' to point to the
      remote installation package (accessible on Ansible managed node)!



# Optionally, verify package checksum


- name: upgrade | Stat checksum file
  stat:
    path: "{{ scale_install_remotepkg_path }}.md5"
  register: scale_install_md5_file


- block:  ## when: scale_install_md5_file.stat.exists
    - name: upgrade | Read checksum from file
      slurp:
        src: "{{ scale_install_remotepkg_path }}.md5"
      register: scale_install_md5_sum

    - name: upgrade | Compare checksums
      vars:
        md5sum: "{{ scale_install_md5_sum.content | b64decode }}"
      assert:
        that: md5sum.strip().split().0 == scale_install_remotepkg.stat.checksum
        msg: >-
          Checksums don't match. Please check integritiy of your remote
          installation package!
  when: scale_install_md5_file.stat.exists



# Extract installation package



- name: upgrade | Stat extracted packages
  stat:
    path: /usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms
  register: scale_install_gpfs_rpmdir


- name: upgrade | Make installation package executable
  file:
    path: "{{ scale_install_remotepkg_path }}"
    mode: a+x
  when: not scale_install_gpfs_rpmdir.stat.exists


- name: upgrade | Extract installation package
  command: "{{ scale_install_remotepkg_path + ' --silent' }}"
  args:
    creates: /usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms


- name: upgrade | Stat extracted packages
  stat:
    path: /usr/lpp/mmfs/{{ scale_version }}/gpfs_rpms
  register: scale_install_gpfs_rpmdir


- name: upgrade | Check extracted packages
  assert:
    that:
      - scale_install_gpfs_rpmdir.stat.exists
      - scale_install_gpfs_rpmdir.stat.isdir
    msg: >-
      The variable 'scale_version' doesn't seem to match the contents of the
      remote installation package!


- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_rpms/rhel/'
  when: ansible_distribution in scale_rhel_distribution
  
- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_debs/ubuntu/'
  when: ansible_distribution in scale_ubuntu_distribution
  
- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_debs/ubuntu/ubuntu20/'
  when:
    - ansible_distribution in scale_ubuntu_distribution and ansible_distribution_major_version == '20'
    - scale_version >= "5.1.4.0"
  
- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_debs/ubuntu/ubuntu22/'
  when: ansible_distribution in scale_ubuntu_distribution and ansible_distribution_major_version == '22'

- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_debs/ubuntu/ubuntu20/'
  when:
    - ansible_distribution in scale_ubuntu_distribution and ansible_distribution_major_version == '20'
    - scale_version >= "5.1.4.0"
  
- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_debs/ubuntu/ubuntu22/'
  when: ansible_distribution in scale_ubuntu_distribution and ansible_distribution_major_version == '22'

- name: upgrade | file audit logging path
  set_fact:
    scale_fal_url: 'gpfs_rpms/rhel/'
  when: ansible_distribution in scale_sles_distribution

#
# Find file audit logging package
#
- block:
    #
    # Find GPFS librdkafka
    #
    - name: upgrade | Find gpfs.librdkafka (gpfs.librdkafka) package
      find:
        paths: "{{ scale_extracted_path }}/{{ scale_fal_url }}"
        patterns: gpfs.librdkafka*.rpm
      register: scale_install_gpfs_fal

    - name: upgrade | Check valid GPFS (gpfs.librdkafka) package
      assert:
        that: scale_install_gpfs_fal.matched > 0
        msg: >-
          No GPFS auditlogin librakafka(gpfs.librdkafka) package found
          {{ scale_extracted_path }}/{{ scale_fal_url }}gpfs.librdkafka*.rpm

    - name: upgrade | Add GPFS file audit logging packages to list
      vars:
        current_package: "{{ scale_extracted_path }}/{{ scale_fal_url }}/{{ item }}"
      set_fact:
        scale_install_all_packages: "{{ scale_install_all_packages + [ current_package ] }}"
      with_items:
        - "{{ scale_install_gpfs_fal.files.0.path | basename }}"
  when: (scale_fileauditlogging_enable | bool)
