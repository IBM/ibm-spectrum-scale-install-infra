---
# YUM repository installation method

#
# Configure YUM repository
#
- name: Initialize
  set_fact:
    is_scale_java_pkg_installed: false
    base_repo_url: "gpfs_rpms/"

- set_fact:
    base_repo_url: ""
  when: scale_baseurl is defined

- name: upgrade | Configure GPFS YUM repository
  yum_repository:
    name: spectrum-scale-gpfs
    description: IBM Spectrum Scale (GPFS)
    baseurl: "{{ scale_install_repository_url }}{{ base_repo_url }}"
    gpgcheck: "{{ scale_install_gpgcheck }}"
    repo_gpgcheck: no
    sslverify: no
    state: present
  notify: yum-clean-metadata
  when:
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
    - scale_install_repository_url is defined
    - scale_install_repository_url != 'existing'

- name: upgrade | Configure GPFS Scale API YUM repository
  yum_repository:
    name: spectrum-scale-scaleapi
    description: IBM Spectrum Scale Scale API (GPFS)
    baseurl: "{{ scale_install_repository_url }}scaleapi_rpms/"
    gpgcheck: "{{ scale_install_gpgcheck }}"
    repo_gpgcheck: no
    sslverify: no
    state: present
  notify: yum-clean-metadata
  when:
    - scale_scaleadmd is defined
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf'
    - scale_install_repository_url is defined
    - scale_install_repository_url != 'existing'

#
# Configure apt repository
#
- name: upgrade | Configure core APT repository
  apt_repository:
    filename: spectrum-scale-core-debs
    repo: "deb [trusted=yes] {{ scale_install_repository_url }}gpfs_debs/ ./"
    validate_certs: no
    state: present
    update_cache: yes
    codename: IBM Spectrum Scale (core debs)
    mode: 0777
  when:
    - ansible_pkg_mgr == 'apt'
    - scale_install_repository_url is defined
    - scale_install_repository_url != 'existing'
#
# Configure zypper repository
#
- name: upgrade | Configure GPFS repository
  zypper_repository:
    name: spectrum-scale-gpfs
    description: IBM Spectrum Scale (GPFS)
    repo: "{{ scale_install_repository_url }}gpfs_rpms/"
    disable_gpg_check: yes
    state: present
    overwrite_multiple: yes
  when:
    - ansible_pkg_mgr == 'zypper'
    - scale_install_repository_url is defined
    - scale_install_repository_url != 'existing'

#
# Add GPFS packages
#
- name: upgrade | Add GPFS packages to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  with_items:
    - "{{ scale_install_gpfs_packages }}"
    - gpfs.gskit

- name: upgrade | Add GPFS packages to list (prior to version 5.0.2.0)
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  with_items:
    - "{{ scale_install_add_packages_pre502 }}"
  when: scale_version is version_compare('5.0.2', '<=')

#
# Add GPFS packages for building GPL module from source
#
- name: upgrade | Add GPFS packages for building GPL module from source to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  when: scale_install_gplbin_package is undefined
  with_items: "{{ scale_install_gplsrc_packages }}"

- name: upgrade | Add GPFS AFM COS package to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  with_items:
    - "{{ scale_hpt_packages }}"
  when:
    - ansible_architecture != "aarch64"

- name: upgrade | Check if gpfs java package is installed
  shell: rpm -q gpfs.java
  register: is_gpfsjava_package_installed
  failed_when: no
  changed_when: no
  when: ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf' or ansible_pkg_mgr == 'zypper'

- name: upgrade | Set if gpfs java package is installed
  set_fact:
    is_scale_java_pkg_installed: true
  when:
    - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'dnf' or ansible_pkg_mgr == 'zypper'
    - is_gpfsjava_package_installed.rc == 0

- name: upgrade | Check if gpfs java package is installed
  shell: dpkg -l | grep gpfs.java | awk "{print $1}" |  grep ii
  register: is_gpfsjava_apt_package_installed
  failed_when: no
  changed_when: no
  when: ansible_pkg_mgr == 'apt'

- name: upgrade | Set if gpfs java package installed
  set_fact:
    is_scale_java_pkg_installed: true
  when:
    - ansible_pkg_mgr == 'apt'
    - is_gpfsjava_apt_package_installed.rc == 0

- name: upgrade | Add GPFS java packages to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  with_items:
    - gpfs.java*
  when: (is_scale_java_pkg_installed | bool)

#
# Add GPFS packages for building scale-api from source
#
- name: install | Add scale api package to list
  set_fact:
    scale_install_all_packages: "{{ scale_install_all_packages + [ item ] }}"
  when: scale_scaleadmd is defined
  with_items:
      - gpfs.scaleapi
