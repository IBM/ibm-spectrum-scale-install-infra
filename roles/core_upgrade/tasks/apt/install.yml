---
#
# Install or update packages
#
- block:  ## when: not scale_daemon_running
    - block:
        - name: Create comma-separated list
          set_fact:
             my_list: "{{ scale_install_all_packages + scale_install_license_packages }}"

        - set_fact:
              my_list: "{{my_list | join(' ')}}"

        - debug:
             msg: "{{my_list }}"

        - name: Execute shell command
          command: apt-get upgrade -y {{ my_list }} -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"
          register: scale_install_debpackageresult
          when: scale_install_directory_pkg_path is defined

        - debug:
             msg: "{{scale_install_debpackageresult}}"
          when: scale_install_directory_pkg_path is defined


        - name: upgrade | Upgrade GPFS packages
          apt:
            deb: "{{ item }}"
            only_upgrade: true
          register: scale_install_debpackageresult
          with_items:
            - "{{ scale_install_all_packages }}"
          when: scale_install_directory_pkg_path is not defined


        - name: upgrade | Upgrade GPFS License packages
          apt:
            deb: "{{ item }}"
            only_upgrade: true
          with_items:
            - "{{ scale_install_license_packages }}"
          when: scale_install_directory_pkg_path is not defined

        - name: upgrade | Check if GPFS packages were updated
          set_fact:
            scale_install_updated: true
          when:
            - (scale_install_debpackageresult.changed)
      when: scale_install_repository_url is not defined

    - block:
        - name: upgrade | Upgrade GPFS Core packages
          package:
           name: "{{ scale_install_all_packages }}"
           state: latest

        - name: upgrade | Upgrade GPFS Core packages
          package:
           name: "{{ scale_install_license_packages }}"
           state: latest
      when: scale_install_repository_url is defined
