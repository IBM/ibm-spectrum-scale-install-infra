#
# Copyright 2020 IBM Corporation
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- name: Test removing node that has been shutdown (Negative Test)
  hosts: controller
  gather_facts: no
  tasks:
  - name: Shutdown node
    ibm_spectrumscale_node: 
      op: "stop"
      name: "{{ groups['test_remove_nodes'][0] }}"

  - name: Attempt to remove node that is shutdown and ensure it is note removed
    ibm_spectrumscale_node:
      state: "absent"
      name: "{{ groups['test_remove_nodes'][0] }}"
    register: result_node_remove
    failed_when: >
      (result_node_remove.rc == 0) or 
      ('FAILED' not in result_node_remove.msg)

  - name: Check to ensure node still exists
    ibm_spectrumscale_node:
      op: "get"
      name: "{{ groups['test_remove_nodes'][0] }}"
    register: result_node_info
    failed_when: >
      (((result_node_info.result | from_json).clusterNodes | length) != 1) or
      (groups['test_remove_nodes'][0] not in (result_node_info.result | from_json).clusterNodes[0].adminNodeName)

  - name: Startup node
    ibm_spectrumscale_node: 
      op: "start"
      name: "{{ groups['test_remove_nodes'][0] }}"

  tags: 
    - remove_node_down


- name: Test removing node that has unhealthy disks (Negative Test)
  hosts: controller
  gather_facts: no
  tasks:
  - name: Test removing node that has unhealthy disks
    block:
      - name: Stop disk(s)
        command: /usr/lpp/mmfs/bin/mmchdisk 
                 "{{ hostvars[groups['test_remove_storage_nodes'][0]].filesystem }}"
                 "stop" 
                 "-d"
                 "{{hostvars[groups['test_remove_storage_nodes'][0]].nsds}}"

      - name: Attempt to remove node with unhealthy disks and ensure node is not removed
        ibm_spectrumscale_node:
          state: "absent"
          name: "{{ groups['test_remove_storage_nodes'][0] }}"
        register: result_node_remove
        failed_when: >
          (result_node_remove.rc == 0) or 
          ('FAILED' not in result_node_remove.msg)

      - name: Check to ensure node still exists
        ibm_spectrumscale_node:
          op: "get"
          name: "{{ groups['test_remove_storage_nodes'][0] }}"
        register: result_node_info
        failed_when: >
          (((result_node_info.result | from_json).clusterNodes | length) != 1) or
          (groups['test_remove_nodes'][0] not in (result_node_info.result | from_json).clusterNodes[0].adminNodeName)

      - name: Start disk(s)
        command: /usr/lpp/mmfs/bin/mmchdisk
                 "{{ hostvars[groups['test_remove_storage_nodes'][0]].filesystem }}"
                 "start" 
                 "-d" 
                 "{{ hostvars[groups['test_remove_storage_nodes'][0]].nsds }}"
    when: (groups['test_remove_storage_nodes']|length > 0)
  tags: 
    - remove_node_with_unhealthy_disk


- name: Test removing a quorum node (Negative Test)
  hosts: controller
  gather_facts: no
  tasks:
  - name: Attempt to remove quorum node and ensure node is not removed
    ibm_spectrumscale_node:
      state: "absent"
      name: "{{ groups['quorum_nodes'][0] }}"
    register: result_quorum_node_remove
    failed_when: >
      (result_quorum_node_remove.rc == 0) or 
      ('FAILED' not in result_quorum_node_remove.msg)

  tags: 
    - remove_quorum_node


- name: Test removing a manager node (Negative Test)
  hosts: controller
  gather_facts: no
  tasks:
  - name: Attempt to remove manager node and ensure node is not removed
    ibm_spectrumscale_node:
      state: "absent"
      name: "{{ groups['manager_nodes'][0] }}"
    register: result_manager_node_remove
    failed_when: >
      (result_manager_node_remove.rc == 0) or 
      ('FAILED' not in result_manager_node_remove.msg)
  tags: 
    - remove_manager_node


- name: Test removing a node
  hosts: controller
  gather_facts: no
  tasks: 
  - name: Remove a single node from the cluster
    ibm_spectrumscale_node:
      state: "absent"
      name: "{{ groups['test_remove_nodes'][0] }}"
    register: node_remove_result

  - name: Check to ensure node has been deleted
    ibm_spectrumscale_node:
      op: "get"
      name: "{{ groups['test_remove_nodes'][0] }}"
    register: result_node_info
    failed_when: >
      (((result_node_info.result | from_json).clusterNodes | length) != 0)
  tags: 
    - remove_valid_node


- name: Test removing a non existing node
  hosts: controller
  gather_facts: no
  tasks: 
  - name: Remove a non existing node from the cluster
    ibm_spectrumscale_node:
      state: "absent"
      name: "{{ groups['test_remove_nodes'][0] }}"
    register: node_remove_result

  tags:
    - remove_duplicate_node

