---
# Installing required ldap client packages for the integration.

- name: LDAP | OS version check
  ansible.builtin.shell: "grep -oE 'release [0-9]+' /etc/redhat-release | awk '{print $2}'"
  register: rhel_version
  changed_when: false

- name: LDAP | Enable SSSD and SSSD Authentication
  ansible.builtin.command: authconfig --enablesssd --enablesssdauth --update
  register: enable_ssd

- debug:
    var: enable_ssd.stdout_lines

- name: LDAP | Select SSSD Authentication Configuration
  ansible.builtin.command: authselect select sssd
  when: rhel_version.stdout == "8"
  register: select_ssd_result

- debug:
    var: select_ssd_.stdout_lines

- name: LDAP | LDAP Conf Update with LDAP_SERVER and BASE_DN
  ansible.builtin.blockinfile:
    path: /etc/openldap/ldap.conf
    marker: "# {mark} Ansible Managed Content"
    block: |
      URI ldap://{{ LDAP_SERVER_IP }}
      BASE dc={{ BASE_DN.split('.')[0] }},dc={{ BASE_DN.split('.')[1] }}

- name: LDAP | SSSD Conf Update
  shell: |
    echo "[domain/default]
    autofs_provider = ldap
    cache_credentials = True
    ldap_search_base = dc={{ BASE_DN.split('.')[0] }},dc={{ BASE_DN.split('.')[1] }}
    id_provider = ldap
    auth_provider = ldap
    chpass_provider = ldap
    ldap_uri = ldap://{{ LDAP_SERVER_IP }}
    enumerate = true
    access_provider = simple
    ldap_id_use_start_tls = false
    ldap_tls_reqcert = never

    [sssd]
    services = nss, pam, autofs
    domains = default

    [nss]
    homedir_substring = /home" > "/etc/sssd/sssd.conf"

- name: LDAP | SSSD Permission set
  ansible.builtin.file:
    path: /etc/sssd/sssd.conf
    mode: '0600'

- name: LDAP | Restart SSSD
  ansible.builtin.systemd:
    name: sssd
    state: restarted

- name: LDAP | Enable SSSD at boot
  ansible.builtin.systemd:
    name: sssd
    enabled: yes

- name: LDAP | Enable authselect feature with-mkhomedir
  ansible.builtin.command: authselect enable-feature with-mkhomedir

- name: LDAP | Enable ODDJOB at boot
  ansible.builtin.systemd:
    name: oddjobd.service
    enabled: yes

- name: LDAP | Restart ODDJOB
  ansible.builtin.systemd:
    name: oddjobd.service
    state: restarted

- name: LDAP | Restart SSH service
  ansible.builtin.systemd:
    name: sshd
    state: restarted