---
# Installing required LDAP client packages for the integration.

- name: LDAP | Check OS version
  ansible.builtin.shell: "grep -oE 'release [0-9]+' /etc/redhat-release | awk '{print $2}'"
  register: rhel_version
  changed_when: false

- name: LDAP | Check ldap_cacert.pem
  stat:
    path: "{{ LDAP_CERT_FILES_DIR }}/ldap_cacert.pem"
  register: ldap_cert_stat

- name: LDAP | Copy ldap_cacert.pem to remote servers
  copy:
    src: "{{ LDAP_CERT_FILES_DIR }}/ldap_cacert.pem"
    dest: /etc/openldap/certs/
    owner: root
    group: root
    mode: '0600'
  when: not ldap_cert_stat.stat.exists
  register: ldap_cert_result

- block:
    - name: LDAP | Create the SSSD configuration file
      template:
        src: sssd.conf.j2
        dest: /etc/sssd/sssd.conf
        mode: '0600'
        owner: root
        group: root

    - name: LDAP | Update LDAP Configuration with LDAP_SERVER and BASE_DN
      ansible.builtin.blockinfile:
        path: /etc/openldap/ldap.conf
        block: |
          BASE   dc={{ BASE_DN.split('.')[0] }},dc={{ BASE_DN.split('.')[1] }}
          URI    ldap://{{ LDAP_SERVER_IP }}/
          TLS_CACERT /etc/openldap/certs/ldap_cacert.pem
          TLS_CACERTDIR /etc/openldap/certs
        create: yes

    - name: LDAP | Rehash certificates in the OpenLDAP directory
      command: openssl rehash /etc/openldap/certs

    - name: LDAP | Apply SSSD configuration with mkhomedir using authselect
      command: authselect select sssd with-mkhomedir --force

    - name: LDAP | Restart and Enable SSSD and oddjobd services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - sssd
        - oddjobd

    - name: LDAP | Allow SSH authentication
      ansible.builtin.command: sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
      notify: Restart SSH Service

  when: rhel_version.stdout in ["7", "8", "9"] and ldap_cert_result is not failed