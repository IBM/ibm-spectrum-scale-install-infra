---
- name: LDAP | OS version check
  ansible.builtin.shell: "grep -oE 'release [0-9]+' /etc/redhat-release | awk '{print $2}'"
  register: rhel_version
  changed_when: false

- block:
    - name: LDAP | Enable LDAP authentication
      ansible.builtin.shell: |
        authconfig --enableldap --enableldapauth --ldapserver=ldap://{{ LDAP_SERVER_IP }} --ldapbasedn="dc={{ BASE_DN.split('.')[0] }},dc={{ BASE_DN.split('.')[1] }}" --enablemkhomedir --update
      register: enable_authconfig

    - debug:
        var: enable_authconfig.stdout_lines

    - name: Update NSSwitch config file
      ansible.builtin.shell: |
        sed -i -e 's/^passwd:.*$/passwd: files ldap/' \
               -e 's/^shadow:.*$/shadow: files ldap/' \
               -e 's/^group:.*$/group: files ldap/' /etc/nsswitch.conf

        sed -i '/^auth/d' /etc/pam.d/password-auth
        sed -i '/^auth/d' /etc/pam.d/system-auth

    - name: Update configuration
      ansible.builtin.shell: |
        auth_line="\nauth        required      pam_env.so\n\
        auth        sufficient    pam_unix.so nullok try_first_pass\n\
        auth        requisite     pam_succeed_if.so uid >= 1000 quiet_success\n\
        auth        sufficient    pam_ldap.so use_first_pass\n\
        auth        required      pam_deny.so"

        echo -e "$auth_line" | tee -a /etc/pam.d/password-auth /etc/pam.d/system-auth
        cat /etc/pam.d/password-auth > /etc/pam.d/sshd

    - name: LDAP | Update LDAP Configuration with LDAP_SERVER and BASE_DN
      ansible.builtin.blockinfile:
        path: /etc/nslcd.conf
        block: |
          uid nslcd
          gid ldap
          uri ldap://{{ LDAP_SERVER_IP }}/
          base dc={{ BASE_DN.split('.')[0] }},dc={{ BASE_DN.split('.')[1] }}
        create: yes
        replace: yes

    - name: Allow SSH authentication
      ansible.builtin.shell: |
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

    - name: Restart SSH Service
      ansible.builtin.systemd:
         name: sshd
         state: restarted
         enabled: yes

    - name: Restart and enable the services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - nslcd
        - nscd
  when: rhel_version.stdout in ["7", "8"]